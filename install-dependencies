#! /usr/bin/env bash

# TODO which of these is better?
  #sudo -i su -c "$(pwd)/install"
  #sudo -i "$(pwd)/install"

set -e

# see https://stackoverflow.com/a/246128/5354298
script_dir() { echo "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; }

# see https://stackoverflow.com/a/24067243/5354298
version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }

# see https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script
is_installed() { hash $1 2>/dev/null || { false; } }
exit_if_not_installed() { is_installed $1 || { echo >&2 "I require $1 but it's not installed. Aborting. See https://nixos.org/nix/manual/#sec-prerequisites-source."; exit 1; } }
function ensure_installed() {
	if ! is_installed $1 ; then
		echo "Installing missing dependency $1...";
		$2;
	fi
}

echo "Installing/Updating GPMLConverter"

if [ "$HOME" != '/root' ]; then
	cat >&2 <<'END_HEREDOC'
Error: this script must be run as root.
Please cd to the dir containing this script and run it as:
  sudo -i "$(pwd)/install"
END_HEREDOC
	exit;
fi

cd $HOME; 

if [ $(pwd) != '/root' ]; then
	cat >&2 <<'END_HEREDOC'
Error: failed to cd to /root
END_HEREDOC
	exit;
fi

echo "Ensuring nix is installed and up to date...";
exit_if_not_installed nix-channel;
exit_if_not_installed nix-env;
nix-channel --update

echo "Ensuring dependencies are installed...";
ensure_installed jq "nix-env -f <nixos> -i jq";

ensure_installed node "nix-env -f <nixos> -i nodejs";

ensure_installed node2nix "nix-env -f <nixpkgs> -iA nodePackages.node2nix";

cd $(script_dir);

nix-collect-garbage -d;

rm -f default.nix node-packages.nix node-env.nix;
echo "Installing Nodejs dependencies...";
cat package.json | jq '.dependencies | to_entries | map({(.key): .value})' > node-packages.json;
node2nix --flatten -6 -i node-packages.json
nix-env -f default.nix -i
rm node-packages.json;

echo "Setting Apache env variable PATH to use Nix bin...";
APACHE_ENV_VARS_PATH="/etc/apache2/envvars";
NIX_BIN_PATH_GLOBAL="/root/.nix-profile/bin";
if ! cat $APACHE_ENV_VARS_PATH | grep $NIX_BIN_PATH_GLOBAL; then
	echo '' >> $APACHE_ENV_VARS_PATH;
	echo '# Added to allow WikiPathways to access CLI tools installed via nix.' >> $APACHE_ENV_VARS_PATH;
	echo "PATH=\$PATH:$NIX_BIN_PATH_GLOBAL" >> $APACHE_ENV_VARS_PATH;
fi

echo "Creating symlink to browser version of pvjs.js";
executable_pvjs_symlink=`which pvjs`;
executable_pvjs=`readlink $executable_pvjs_symlink`;
executable_pvjs_dir="`dirname $executable_pvjs`/..";
browser_pvjs=`readlink -f "$executable_pvjs_dir/@wikipathways/pvjs/dist/pvjs.vanilla.js"`;
browser_pvjs_symlink="./pvjs.vanilla.js";

rm -f "$browser_pvjs_symlink";
ln -s "$browser_pvjs" "$browser_pvjs_symlink";

rm -f "$browser_pvjs_symlink.map";
ln -s "$browser_pvjs.map" "$browser_pvjs_symlink.map";

echo "Symlink created:";
echo `ls -l $browser_pvjs_symlink`;

echo "Success! GPMLConverter installed/updated."
